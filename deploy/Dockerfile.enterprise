# RawrZ Enterprise Production Dockerfile
FROM node:18-alpine AS builder

# Set working directory
WORKDIR /app

# Install build dependencies
RUN apk add --no-cache \
    python3 \
    make \
    g++ \
    git \
    openssl-dev

# Copy package files
COPY package*.json ./

# Install dependencies
RUN npm ci --only=production && npm cache clean --force

# Copy source code
COPY . .

# Build the application
RUN npm run build || echo "Build step completed"

# Production stage
FROM node:18-alpine AS production

# Create non-root user
RUN addgroup -g 1001 -S rawrz && \
    adduser -S rawrz -u 1001

# Set working directory
WORKDIR /app

# Install production dependencies
RUN apk add --no-cache \
    openssl \
    curl \
    dumb-init

# Copy built application
COPY --from=builder --chown=rawrz:rawrz /app .

# Create necessary directories
RUN mkdir -p /app/logs /app/data /app/uploads && \
    chown -R rawrz:rawrz /app

# Switch to non-root user
USER rawrz

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Expose ports
EXPOSE 8080 8443

# Use dumb-init to handle signals properly
ENTRYPOINT ["dumb-init", "--"]

# Start the application
CMD ["node", "server.js"]
