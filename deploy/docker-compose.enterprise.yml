version: '3.8'

services:
  # RawrZ Main Application
  rawrz-app:
    build:
      context: ..
      dockerfile: deploy/Dockerfile.enterprise
    container_name: rawrz-enterprise
    restart: unless-stopped
    ports:
      - "8080:8080"
      - "8443:8443"
    environment:
      - NODE_ENV=production
      - LOG_LEVEL=info
      - CLUSTER_MODE=true
      - REDIS_URL=redis://redis:6379
      - POSTGRES_URL=postgresql://rawrz:${POSTGRES_PASSWORD}@postgres:5432/rawrz_enterprise
    volumes:
      - rawrz_data:/app/data
      - rawrz_logs:/app/logs
      - rawrz_uploads:/app/uploads
    depends_on:
      - redis
      - postgres
      - nginx
    networks:
      - rawrz-network
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '2.0'
        reservations:
          memory: 1G
          cpus: '1.0'

  # Load Balancer
  nginx:
    image: nginx:alpine
    container_name: rawrz-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - rawrz-app
    networks:
      - rawrz-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: rawrz-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    networks:
      - rawrz-network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: rawrz-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=rawrz_enterprise
      - POSTGRES_USER=rawrz
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - rawrz-network

  # Monitoring - Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: rawrz-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
    networks:
      - rawrz-network

  # Monitoring - Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: rawrz-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
    networks:
      - rawrz-network

  # Log Aggregation - ELK Stack
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.0
    container_name: rawrz-elasticsearch
    restart: unless-stopped
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - rawrz-network

  logstash:
    image: docker.elastic.co/logstash/logstash:8.8.0
    container_name: rawrz-logstash
    restart: unless-stopped
    volumes:
      - ./monitoring/logstash/pipeline:/usr/share/logstash/pipeline
      - ./monitoring/logstash/config:/usr/share/logstash/config
    depends_on:
      - elasticsearch
    networks:
      - rawrz-network

  kibana:
    image: docker.elastic.co/kibana/kibana:8.8.0
    container_name: rawrz-kibana
    restart: unless-stopped
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    networks:
      - rawrz-network

volumes:
  rawrz_data:
  rawrz_logs:
  rawrz_uploads:
  redis_data:
  postgres_data:
  prometheus_data:
  grafana_data:
  elasticsearch_data:

networks:
  rawrz-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
