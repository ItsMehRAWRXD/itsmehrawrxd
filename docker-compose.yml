version: '3.8'

services:
  rawrz-platform:
    build: .
    container_name: rawrz-security-platform
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=production
      - PORT=8080
      - AUTH_TOKEN=${AUTH_TOKEN:-}
    volumes:
      - ./data:/app/data
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - rawrz-network

  nginx:
    image: nginx:alpine
    container_name: rawrz-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - rawrz-platform
    restart: unless-stopped
    networks:
      - rawrz-network

  redis:
    image: redis:alpine
    container_name: rawrz-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - rawrz-network

  postgres:
    image: postgres:15-alpine
    container_name: rawrz-postgres
    environment:
      - POSTGRES_DB=rawrz
      - POSTGRES_USER=rawrz
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-rawrz123}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - rawrz-network

volumes:
  redis-data:
  postgres-data:

networks:
  rawrz-network:
    driver: bridge
